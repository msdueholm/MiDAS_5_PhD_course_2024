library(ampvis2)
library(dplyr)
me <- read.delim('Amplicon_data_for_hands_on_exercices/V13_metadata.txt')
m <- read.delim('Amplicon_data_for_hands_on_exercices/V4_metadata.txt')
View(me)
View(m)
View(me)
V13_metadata <- read.delim(V13_metadata)
# Set paths
V13_metadata = 'Amplicon_data_for_hands_on_exercices/V13_metadata.txt'#metadata
V13_metadata <- read.delim(V13_metadata)
View(V13_metadata)
V13_metadata <- read.delim(V13_metadata) %>%
mutate(Location = paste0(Latitude, ",",Longitude),
Tank_ID = substr(SampleID, 1, nchar(SampleID) - 2))
# Set paths
V13_metadata = 'Amplicon_data_for_hands_on_exercices/V13_metadata.txt'#metadata
V13_metadata <- read.delim(V13_metadata) %>%
mutate(Location = paste0(Latitude, ",",Longitude),
Tank_ID = substr(SampleID, 1, nchar(SampleID) - 2))
# Set paths
V4_metadata = 'Amplicon_data_for_hands_on_exercices/V4_metadata.txt'#metadata
V4_ASVtab = 'Amplicon_data_for_hands_on_exercices/V4_ASVtab.txt' #ASV table
V4_tax = 'Amplicon_data_for_hands_on_exercices/V4_ASV_MiDAS_5.3.sintax' #taxonomy
ASV4='Amplicon_data_for_hands_on_exercices/V13_ASV.fa' #ASVs
V4_metadata <- read.delim(V4_metadata) %>%
mutate(Location = paste0(Latitude, ",",Longitude),
Tank_ID = substr(SampleID, 1, nchar(SampleID) - 2))
V4_metadata_path = 'Amplicon_data_for_hands_on_exercices/V4_metadata.txt'#metadata
V4_ASVtab = 'Amplicon_data_for_hands_on_exercices/V4_ASVtab.txt' #ASV table
V4_tax = 'Amplicon_data_for_hands_on_exercices/V4_ASV_MiDAS_5.3.sintax' #taxonomy
ASV4='Amplicon_data_for_hands_on_exercices/V13_ASV.fa' #ASVs
# Add location to metadata (based on GPS coordinates) and tank ID
V4_metadata <- read.delim(V4_metadata_path) %>%
mutate(Location = paste0(Latitude, ",",Longitude),
Tank_ID = substr(SampleID, 1, nchar(SampleID) - 2))
# Set paths
V13_metadata_path = 'Amplicon_data_for_hands_on_exercices/V13_metadata.txt'#metadata
V13_ASVtab = 'Amplicon_data_for_hands_on_exercices/V13_ASVtab.txt' #ASV table
V13_tax = 'Amplicon_data_for_hands_on_exercices/V13_ASV_MiDAS_5.3.sintax' #taxonomy
ASV='Amplicon_data_for_hands_on_exercices/V13_ASV.fa' #ASVs
# Add location to metadata (based on GPS coordinates) and tank ID
V13_metadata <- read.delim(V13_metadata_path) %>%
mutate(Location = paste0(Latitude, ",",Longitude),
Tank_ID = substr(SampleID, 1, nchar(SampleID) - 2))
# Load into ampvis object
d13 <- amp_load(otutable = V13_ASVtab,
taxonomy = V13_tax,
metadata = V13_metadata,
fasta = ASV)
# Set paths
V4_metadata_path = 'Amplicon_data_for_hands_on_exercices/V4_metadata.txt'#metadata
V4_ASVtab = 'Amplicon_data_for_hands_on_exercices/V4_ASVtab.txt' #ASV table
V4_tax = 'Amplicon_data_for_hands_on_exercices/V4_ASV_MiDAS_5.3.sintax' #taxonomy
ASV4='Amplicon_data_for_hands_on_exercices/V13_ASV.fa' #ASVs
# Add location to metadata (based on GPS coordinates) and tank ID
V4_metadata <- read.delim(V4_metadata_path) %>%
mutate(Location = paste0(Latitude, ",",Longitude),
Tank_ID = substr(SampleID, 1, nchar(SampleID) - 2))
# Load into ampvis object
d4 <- amp_load(otutable = V4_ASVtab,
taxonomy = V4_tax,
metadata = V4_metadata,
fasta = ASV4)
# filter out samples with low number of reads and rarefy
d13_rare <- amp_subset_samples(d13, rarefy = 10000, minreads = 10000,
removeAbsentOTUs = T)
d4_rare <- amp_subset_samples(d4, rarefy = 10000, minreads = 10000,
removeAbsentOTUs = T)
# normalise to relative abundance
d13n <- amp_subset_samples(d13_rare,normalise = T)
d4n <- amp_subset_samples(d4_rare,normalise = T)
ord13 <- amp_ordinate(d13,
type = "pcoa",
distmeasure = "bray")
ord4 <- amp_ordinate(d4,
type = "pcoa",
distmeasure = "bray")
ord4
ord4 <- amp_ordinate(d4,
type = "pcoa",
distmeasure = "bray",
sample_color_by = 'City')
ord4
ord4 <- amp_ordinate(d4,
type = "pcoa",
distmeasure = "bray",
sample_color_by = 'City',
sample_label_by = 'City')
ord4
ord4 <- amp_ordinate(d4,
type = "pcoa",
distmeasure = "bray",
sample_color_by = 'City',
sample_colorframe_label = 'City',
sample_colorframe = T )
ord4
ord4 <- amp_ordinate(d4,
type = "pcoa",
distmeasure = "bray",
sample_color_by = 'City',
sample_colorframe_label = 'City',
sample_colorframe = T,
envfit_factor = 'Location')
ord4
ord4 <- amp_ordinate(d4,
type = "pcoa",
distmeasure = "bray",
sample_color_by = 'City',
#sample_colorframe_label = 'City',
sample_colorframe = T,
envfit_factor = 'City')
ord4
ord4 <- amp_ordinate(d4,
type = "pcoa",
distmeasure = "bray",
sample_color_by = 'City',
sample_colorframe_label = 'City',
sample_colorframe = T)
ord4
ord4+ord13
V35_metadata_path = 'Amplicon_data_for_hands_on_exercices/V35_metadata.txt'#metadata
V35_ASVtab = 'Amplicon_data_for_hands_on_exercices/V35_ASVtab.txt' #ASV table
V35_tax = 'Amplicon_data_for_hands_on_exercices/V35_ASV_MiDAS_5.3.sintax' #taxonomy
ASV='Amplicon_data_for_hands_on_exercices/V35_ASV.fa' #ASVs
# Add location to metadata (based on GPS coordinates) and tank ID
V35_metadata <- read.delim(V35_metadata_path) %>%
mutate(Location = paste0(Latitude, ",",Longitude),
Tank_ID = substr(SampleID, 1, nchar(SampleID) - 2))
V35_metadata_path = 'Amplicon_data_for_hands_on_exercices/V35_metadata.txt'#metadata
V35_ASVtab = 'Amplicon_data_for_hands_on_exercices/V35_ASVtab.txt' #ASV table
V35_tax = 'Amplicon_data_for_hands_on_exercices/V35_ASV_MiDAS_5.3.sintax' #taxonomy
ASV35='Amplicon_data_for_hands_on_exercices/V35_ASV.fa' #ASVs
# Add location to metadata (based on GPS coordinates) and tank ID
V35_metadata <- read.delim(V35_metadata_path) %>%
mutate(Location = paste0(Latitude, ",",Longitude),
Tank_ID = substr(SampleID, 1, nchar(SampleID) - 2))
# Load into ampvis object
dV35 <- amp_load(otutable = V35_ASVtab,
taxonomy = V35_tax,
metadata = V35_metadata,
fasta = ASV35)
View(dV35)
d35_rare <- amp_subset_samples(d35, rarefy = 10000, minreads = 10000,
removeAbsentOTUs = T)
# Load into ampvis object
d35 <- amp_load(otutable = V35_ASVtab,
taxonomy = V35_tax,
metadata = V35_metadata,
fasta = ASV35)
d35_rare <- amp_subset_samples(d35, rarefy = 10000, minreads = 10000,
removeAbsentOTUs = T)
d35n <- amp_subset_samples(d35_rare,normalise = T)
ord35 <- amp_ordinate(d35n,
type = "pcoa",
distmeasure = "bray")
d35filaments <- amp_subset_taxa(d35n, tax_vector = Filaments, normalise = FALSE)
Filaments <- c("g__Ca_Microthrix", "g__Leptothrix","g__Sphaerotilus","g__Ca_Villigracilis","g__Trichococcus",
"g__Thiothrix","g__Ca_Promineofilum","Haliscomenobacter","g__Gordonia","g__Sarcinithrix","g__Ca_Amarolinea","g__Kouleothrix","g__Ca_Alysiosphaera",
"g__Nocardioides","g__midas_g_1668","g__Anaerolinea","g__Ca_Caldilinea","g__Ca_Hadersleviella","g__midas_g_344",
"g__Skermania","g__Ca_Nostocoida","g__Neomegalonema","g__Beggiatoa","g__Ca_Brevefilum")
d35filaments <- amp_subset_taxa(d35n, tax_vector = Filaments, normalise = FALSE)
# filter out samples with low number of reads and rarefy
d13_rare <- amp_subset_samples(d13, rarefy = 10000, minreads = 10000,
removeAbsentOTUs = T)
d4_rare <- amp_subset_samples(d4, rarefy = 10000, minreads = 10000,
removeAbsentOTUs = T)
d35_rare <- amp_subset_samples(d35, rarefy = 10000, minreads = 10000,
removeAbsentOTUs = T)
# normalise to relative abundance
d13n <- amp_subset_samples(d13_rare,normalise = T)
d4n <- amp_subset_samples(d4_rare,normalise = T)
d35n <- amp_subset_samples(d35_rare,normalise = T)
amp_heatmap(d13n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
#facet_by = c('City','Location'),
plot_values = T,
tax_show = 20) +
amp_heatmap(d4n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
#facet_by = c('City','Location'),
plot_values = T,
tax_show = 20) +
amp_heatmap(d35n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
#facet_by = c('City','Location'),
plot_values = T,
tax_show = 20)
amp_heatmap(d13n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20) +
amp_heatmap(d4n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20) +
amp_heatmap(d35n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20)
p <- amp_heatmap(d13n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20) +
amp_heatmap(d4n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20) +
amp_heatmap(d35n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20)
p
p <- amp_heatmap(d13n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20) +
amp_heatmap(d4n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20) +
amp_heatmap(d35n,
group_by = 'Country',
normalise = F,
tax_aggregate = 'Genus',
tax_add = 'Kingdom',
plot_values = T,
tax_show = 20) + labs(title = 'V3-5')
p
p
install.packages('vegan')
install.packages("vegan")
library("vegan")
